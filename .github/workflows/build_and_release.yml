name: Build and Release

on:
  push:
    tags:
      - "*.*.*"

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      #      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
          cache: 'pip'
      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip

      - name: Install Dependencies
        run: |
          python -m pip install -r requirements.txt

      - name: Build
        run: |
          python build.py

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: dist/



  release:
    name: Release
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest
          path: ubuntu-latest
      - uses: actions/download-artifact@v2
        with:
          name: windows-latest
          path: windows-latest
      - uses: actions/download-artifact@v2
        with:
          name: macos-latest
          path: macos-latest
      - run: |
          for f in windows-latest/* ; do mv — “$f” “${{ steps.get_version.outputs.VERSION }}-windows-x86_64-$f” ; done
          for f in ubuntu-latest/* ; do mv — “$f” “${{ steps.get_version.outputs.VERSION }}-linux-x86_64-$f” ; done
          for f in macos-latest/* ; do mv — “$f” “${{ steps.get_version.outputs.VERSION }}-macos-x86_64-$f” ; done
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            windows-latest/*
            ubuntu-latest/*
            macos-latest/*
            LICENSE