name: Build and Release

on:
  push:
    tags:
      - "*.*.*"

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      #      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
          cache: 'pip'
      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip

      - name: Install Dependencies
        run: |
          python -m pip install -r requirements.txt

      - name: Build
        run: |
          python scripts/build.py

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: dist/



  release:
    name: Release
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      #      - uses: actions/checkout@v2 # get the scripts
      #      - name: Set up Python ${{ matrix.python-version }} # setup python
      #        uses: actions/setup-python@v2
      #        with:
      #          python-version: 3.7
      - name: Get the version # get the version from the tag
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest
          path: ubuntu-latest
      - uses: actions/download-artifact@v2
        with:
          name: windows-latest
          path: windows-latest
      - uses: actions/download-artifact@v2
        with:
          name: macos-latest
          path: macos-latest
      - name: Rename the artifacts
        run: |
          mv ubuntu-latest/ linux-x86_64-${{ steps.get_version.outputs.VERSION }}/
          mv windows-latest/ windows-x86_64-${{ steps.get_version.outputs.VERSION }}/
          mv macos-latest/ macos-x86_64-${{ steps.get_version.outputs.VERSION }}/
      - name: Zip MAC OS app
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -R -r macos-x86_64-${{ steps.get_version.outputs.VERSION }}.zip macos-x86_64-${{ steps.get_version.outputs.VERSION }}/*.app
      - name: List the files
        run: ls -l && ls -l linux-x86_64-${{ steps.get_version.outputs.VERSION }}/ && ls -l windows-x86_64-${{ steps.get_version.outputs.VERSION }}/ && ls -l macos-x86_64-${{ steps.get_version.outputs.VERSION }}/
      - name: create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            linux-x86_64-${{ steps.get_version.outputs.VERSION }}/*
            windows-x86_64-${{ steps.get_version.outputs.VERSION }}/*
            windows-x86_64-${{ steps.get_version.outputs.VERSION }}/*.exe
            macos-x86_64-${{ steps.get_version.outputs.VERSION }}/*
            macos-x86_64-${{ steps.get_version.outputs.VERSION }}/*.app
            macos-x86_64-${{ steps.get_version.outputs.VERSION }}.zip
#      - name: Create Release 2
#        uses: ncipollo/release-action@v1
#        with:
#          artifacts: "release.tar.gz,foo/*.txt"
#          bodyFile: "body.md"
#          token: ${{ secrets.GITHUB_TOKEN }}